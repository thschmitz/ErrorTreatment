import java.util.*;
import java.io.*;

public class ComparaData{

  String[] listaArquivoNomes;
  List <String> nomesFinais = new ArrayList<String>();
  
  ComparaData(String[] listaNomes){
    this.listaArquivoNomes = listaNomes;
  }
  
  public void comparar(int dataInicial, int dataFinal){
    Scanner entrada = new Scanner(System.in);
    FormataData formataData = new FormataData();

    

    System.out.println("ANALISE DESGRAÇADO AQUI OH: " + listaArquivoNomes[0] + "\n" + listaArquivoNomes[0].charAt(0));



    
    for(int i = 0; i < listaArquivoNomes.length; i++){
          if(Integer.parseInt(listaArquivoNomes[i]) >= dataInicial && Integer.parseInt(listaArquivoNomes[i]) <= dataFinal){
            nomesFinais.add("server.log." + listaArquivoNomes[i].charAt(0) + listaArquivoNomes[i].charAt(1) +listaArquivoNomes[i].charAt(2) + listaArquivoNomes[i].charAt(3) + "-" + listaArquivoNomes[i].charAt(4) + listaArquivoNomes[i].charAt(5) + "-" + listaArquivoNomes[i].charAt(6) + listaArquivoNomes[i].charAt(7));
          }
        }    
  }

  public List<String> getNomeFinais(){
    return this.nomesFinais;
  }
}




if(linhas.get(i).contains(" [stderr] ")){

						// Da para fazer um metodo disso daqui para chamar em toda condicao
						// erro = linhas.get(i).split("\\.")[4].split(":")[0];
						erro = linhas.get(i).split(":").

						erro = linhas.get
						errosGerais.add(erro);
						System.out.println("stderr: " + erro);
					}

					if(linhas.get(i).contains(" [io.undertow.servlet] ")){

						erro = linhas.get(i).split("\\.")[4].split(":")[0];
						errosGerais.add(erro);

						System.out.println("servlet: " + erro);
					}

					if(linhas.get(i).contains(" [io.undertow.request] ")) {
						erro = linhas.get(i).split("\\.")[5].split(":")[0];
						errosGerais.add(erro);

						System.out.println("Request: " + erro);
					}

					if(linhas.get(i).contains(" [org.hibernate.proxy.pojo.BasicLazyInitializer] ")){
						erro = linhas.get(i).split(":")[4].split("\\.")[2];
						
						errosGerais.add(erro);

						System.out.println("BasicLazyInitializer: " + erro);
					}

          if(linhas.get(i).contains(" [com.systemhaus.antara.usuario.bo.LogAcesso] ")){

						erro = linhas.get(i).split(":")[3].split("\\.")[8];
						errosGerais.add(erro);

						System.out.println("LogAcesso: " + erro);
            
					}




if(linhas.get(i).contains(" [stderr] ")){

						// Da para fazer um metodo disso daqui para chamar em toda condicao
						// erro = linhas.get(i).split("\\.")[4].split(":")[0];
							
						if(linhas.get(i).contains("Thread-123")){
							erro = linhas.get(i).split("\\.")[2];
						} else {
							erro = linhas.get(i).split(":")[2].split("\\.")[4];
						}

						errosGerais.add(erro);						System.out.println("stderr: " + erro);
					}

					if(linhas.get(i).contains(" [io.undertow.servlet] ")){

						// erro = linhas.get(i).split("\\.")[4].split(":")[0];
						erro = linhas.get(i).split(":")[4].split("\\.")[2];
						errosGerais.add(erro);

						System.out.println("servlet: " + erro);
					}

					if(linhas.get(i).contains(" [io.undertow.request] ")) {
						// erro = linhas.get(i).split("\\.")[5].split(":")[0];
						erro = linhas.get(i).split(":")[4].split("\\.")[2];

						
						errosGerais.add(erro);

						System.out.println("Request: " + erro);
					}

					if(linhas.get(i).contains(" [org.hibernate.proxy.pojo.BasicLazyInitializer] ")){
						// erro = linhas.get(i).split(":")[4].split("\\.")[2];
						erro = linhas.get(i).split(":")[4].split("\\.")[2];

						errosGerais.add(erro);

						System.out.println("BasicLazyInitializer: " + erro);
					}

          if(linhas.get(i).contains(" [com.systemhaus.antara.usuario.bo.LogAcesso] ")){

						// erro = linhas.get(i).split(":")[3].split("\\.")[8];
						erro = linhas.get(i).split(":")[3].split("\\;")[1].split("\\.")[2];

						errosGerais.add(erro);

						System.out.println("LogAcesso: " + erro);
            
					}











import java.io.*;
import java.util.*;

public class MenuQtdErrosDiario{
	public void menu(TituloSecoes titulo){
    Scanner entrada = new Scanner(System.in);

		String[] listaPerguntas = {"Digite o dia desejado: ", "Digite o mês desejado: ", "Digite o ano desejado: "};
		String[] listaRespostas = {"", "", ""};
		int resposta = 0;
		Cores colorir = new Cores();
		LerData lerData = new LerData();
		LeituraArquivo leituraArquivo = new LeituraArquivo();
		List<String> linhas = new ArrayList<>();
		Filtragem filtragem = new Filtragem();
		ArrayList<String> listaFrases = new ArrayList<String>();
		
		titulo.tituloPrincipal("Menu erros diários");
		// Fazer classe disso daqui com o do MenuErroDiario.java
    // Talvez mudar pergunta
		for(int i = 0; i < listaPerguntas.length; i++){
			System.out.println(listaPerguntas[i]);
			System.out.print("-> ");
			resposta = entrada.nextInt();
      if(resposta < 10){
        listaRespostas[i] = ("0" + Integer.toString(resposta));
			  System.out.println(" ");
      }else{
        listaRespostas[i] = (Integer.toString(resposta));
      }
      
		}

		String value = listaRespostas[2] + "-" + listaRespostas[1] + "-" + listaRespostas[0];

		linhas = lerData.ler(value);


		//listaFrases = filtragem.filtrar(linhas);


		
		String leftAlignFormat = "| %-15s | %-12d | %-6s | %n";

		System.out.format("+-----------------+--------------+--------+%n");
		System.out.format("|"+ "\u001B[31m"+ "     Erros    "+"\u001B[0m"+ "   | "+ "\u001B[33m" +" Ocorrencias " + "\u001B[0m" + "|" + "\u001B[32m" + "    %%   "+"\u001B[0m" + "|%n");
		System.out.format("+-----------------+--------------+--------+%n");
		for (int i = 0; i < listaFrases.size(); i++) {
			String palavraErro = listaFrases.get(i).split(" --- ")[0];
			String numeroErros = listaFrases.get(i).split(" --- ")[1];
			String porcentagemErros = listaFrases.get(i).split(" --- ")[2];
			
			System.out.format(leftAlignFormat, palavraErro, numeroErros, porcentagemErros);
		}
		System.out.format("+-----------------+--------------+--------+%n");

		for(int i = 0; i < listaFrases.size(); i++) {
			System.out.println(listaFrases.get(i));

		}
					
  }
}




















import java.io.*;
import java.util.*;

public class MenuQtdErrosPeriodo{
	public void menu(TituloSecoes titulo, String[] lista ){
    Scanner entrada = new Scanner(System.in);

		String[] listaPerguntas = {"Digite o dia inicial desejado: ", "Digite o mês inicial desejado: ", "Digite o ano inicial desejado: ", "Digite o dia final desejado: ", "Digite o mês final desejado: ", "Digite o ano final desejado: " };
		String[] listaRespostas = {"", "", "", "", "", ""};
		int resposta = 0;
		Cores colorir = new Cores();
		LeituraArquivo leituraArquivo = new LeituraArquivo();
		List<String> nomesFinais = new ArrayList<>();
    int dataInicial, dataFinal;
		ComparaData comparaData = new ComparaData(lista);
    Filtragem filtragem = new Filtragem();
    List<String> linhas = new ArrayList<>();
    LerData lerData = new LerData();
    ArrayList<String> listaFrases = new ArrayList<String>();
    

    titulo.tituloPrincipal("Menu quantidade erros período");

		for(int i = 0; i < listaPerguntas.length; i++){
			System.out.println(listaPerguntas[i]);
			System.out.print("-> ");
			resposta = entrada.nextInt();
      if(resposta < 10){
        listaRespostas[i] = ("0" + Integer.toString(resposta));
			  System.out.println(" ");
      }else{
        listaRespostas[i] = (Integer.toString(resposta));
      }      
		}

    dataInicial = Integer.parseInt(listaRespostas[2] + listaRespostas[1] + listaRespostas[0]);
    System.out.println("Data Inicial: " + dataInicial);

    dataFinal = Integer.parseInt(listaRespostas[5] + listaRespostas[4] + listaRespostas[3]);

    System.out.println("Data Inicial: " + dataFinal);

    comparaData.comparar(dataInicial, dataFinal);

    nomesFinais = comparaData.getNomeFinais();

    for(int i = 0; i < nomesFinais.size(); i++){
      
      linhas = lerData.ler(nomesFinais.get(i));
      filtragem.filtrar(linhas);
      
    }
    //filtragem.definirListaNomesRepeticao();
    listaFrases = filtragem.fraseRepeticao();

    for(int i = 0; i < listaFrases.size(); i++){
      System.out.println(listaFrases.get(i));

    }
    								System.out.println("--------------------------------------------------------------------");
	}
}











import java.util.*;
import java.io.*;

class Filtragem {
	ArrayList<String> errosGerais = new ArrayList<String>();
	ArrayList<Integer> listaRepeticoesNumeros = new ArrayList<Integer>();
	ArrayList<String> listaRepeticoesErros = new ArrayList<String>();
	ArrayList<Float> listaRepeticoesPorcentagem = new ArrayList<Float>();
	ArrayList<String> listaFrases = new ArrayList<String>();
  ArrayList<String> listaFrasesRepeticao = new ArrayList<String>();
  ArrayList<String> listaStringRepeticao = new ArrayList<String>();

	public ArrayList<String> filtrar(List<String> linhas) {

		Cores colorir = new Cores();

		String erro = "";

		for (int i = 0; i < linhas.size(); i++) {
			if (!linhas.get(i).contains(" 	at ")) {
				if (linhas.get(i).contains(" ERROR ")) {
					// Exception
					String linha = "";
					int index = linhas.get(i).indexOf("Exception:");

					if (index > -1) {
						index += 9;
						linha = linhas.get(i).substring(0, index);
						String[] partes = linha.split("\\.");
						erro = linha.split("\\.")[partes.length - 1];
					} else if (linhas.get(i).contains(" [org.hibernate.proxy.pojo.BasicLazyInitializer] ")) {
						erro = linhas.get(i).split(":")[4].split("\\.")[2];
					}

					this.errosGerais.add(erro);
				}
			}
		}

		dadosOcorrencias();
		calcularResultado();

	

		for (int i = 0; i < listaRepeticoesErros.size(); i++) {
			this.listaFrases.add(this.listaRepeticoesErros.get(i) + "  ---  " + this.listaRepeticoesNumeros.get(i) + "  ---  "
					+ this.listaRepeticoesPorcentagem.get(i) + "%");
		}
		return this.listaFrases;
	}

  public void definirListaNomesRepeticao(){
    for(int i = 0; i < this.listaFrases.size(); i++){
      this.listaStringRepeticao.add(this.listaFrases.get(i).split(" ")[0]);
    }
  }

  public Integer tamanhoTabela(){
    return listaRepeticoesErros.size();
  }
  
  public ArrayList<String> fraseRepeticao(){
    Set<String> distinct = new HashSet<>(this.listaStringRepeticao);
		ArrayList<Integer> listaRepeticoes = new ArrayList<Integer>();

    this.listaRepeticoesErros.clear();
    this.listaRepeticoesNumeros.clear();
    

		for (String s : distinct) {
      int repeticoes = Collections.frequency(this.errosGerais, s);
      this.listaRepeticoesErros.add(s);
			this.listaRepeticoesNumeros.add(repeticoes);
    }
    calcularResultado();
    for (int i = 0; i < listaRepeticoesErros.size(); i++) {
			this.listaFrasesRepeticao.add(this.listaRepeticoesErros.get(i) + "  ---  " + this.listaRepeticoesNumeros.get(i) + "  ---  "
					+ this.listaRepeticoesPorcentagem.get(i) + "%");
		}
    return this.listaFrasesRepeticao;
  }

	public void calcularResultado() {
		for (int i = 0; i < this.listaRepeticoesErros.size(); i++) {
			float porcento = (this.listaRepeticoesNumeros.get(i).floatValue() / ((float) this.errosGerais.size()) * 100f);

			this.listaRepeticoesPorcentagem.add(porcento);
		}
	}

	public void dadosOcorrencias() {
		Set<String> distinct = new HashSet<>(this.errosGerais);
		ArrayList<Integer> listaRepeticoes = new ArrayList<Integer>();

		for (String s : distinct) {
			int repeticoes = Collections.frequency(this.errosGerais, s);
			this.listaRepeticoesErros.add(s);
			this.listaRepeticoesNumeros.add(repeticoes);
		}
	}
}
